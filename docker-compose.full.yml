services:
  db:
    image: postgres:14
    container_name: pulseiq_postgres
    environment:
      POSTGRES_DB: pulseiq_db
      POSTGRES_USER: pulseiq_user
      POSTGRES_PASSWORD: cse408
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/init-schema.sql:/docker-entrypoint-initdb.d/01_init.sql:ro
    networks:
      - pulseiq-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "pulseiq_user", "-d", "pulseiq_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: pulseiq_backend
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8085:8085"
    networks:
      - pulseiq-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/pulseiq_db?currentSchema=pulseiq
      - SPRING_DATASOURCE_USERNAME=pulseiq_user
      - SPRING_DATASOURCE_PASSWORD=cse408
      - JWT_SECRET=w7Zz8g3kS0Hjb3YzF5k3jI2pK8VrTPCB2qLm+XhQz6M=
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pulseiq_frontend
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "8080:80"
    networks:
      - pulseiq-network
    environment:
      - VITE_BACKEND_URL=http://localhost:8085
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pgdata:

networks:
  pulseiq-network:
    driver: bridge
