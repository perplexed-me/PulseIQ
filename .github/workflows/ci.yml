name: CI Build & Test

on:
  push:
    branches: [ userservice/backend ]
  pull_request:
    branches: [ userservice/backend ]

env:
  POSTGRES_DB:                ${{ secrets.POSTGRES_DB }}
  POSTGRES_USER:              ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD:          ${{ secrets.POSTGRES_PASSWORD }}
  SPRING_DATASOURCE_URL:      ${{ secrets.SPRING_DATASOURCE_URL }}
  SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
  SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
  JWT_SECRET:                 ${{ secrets.JWT_SECRET }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Start PostgreSQL
        run: |
          docker run -d --name postgres-ci \
            -e POSTGRES_DB="$POSTGRES_DB" \
            -e POSTGRES_USER="$POSTGRES_USER" \
            -e POSTGRES_PASSWORD="$POSTGRES_PASSWORD" \
            -p 5432:5432 \
            postgres:14
          until docker exec postgres-ci pg_isready -U "$POSTGRES_USER"; do
            sleep 2
          done

      - name: Build & test with Maven
        run: mvn clean verify -B

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/target/site/jacoco/jacoco.xml

      - name: Tear down PostgreSQL
        if: always()
        run: |
          docker stop postgres-ci
          docker rm postgres-ci

  