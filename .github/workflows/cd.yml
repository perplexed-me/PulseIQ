name: CD Deploy to Azure VM

on:
  workflow_run:
    workflows: ["CI Build & Test"]
    types: [ completed ]

jobs:
  deploy:
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'userservice/backend'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        working-directory: userservice/backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/pulseiq-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/pulseiq-app:latest

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AZURE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy on Azure VM
        uses: appleboy/ssh-action@v1
        with:
          host:     ${{ secrets.AZURE_SSH_HOST }}
          username: ${{ secrets.AZURE_SSH_USER }}
          key:      ${{ secrets.AZURE_SSH_PRIVATE_KEY }}
          script: |
            # Stop & remove existing containers
            docker stop pulseiq_backend postgres_db || true
            docker rm   pulseiq_backend postgres_db  || true

            # Start Postgres
            docker run -d \
              --name postgres_db \
              -e POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
              -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
              -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
              -p 5432:5432 \
              postgres:14

            # Prepare Firebase key file
            mkdir -p ~/pulseiq_secrets
            cat << 'EOF' > ~/pulseiq_secrets/firebase.json
${{ secrets.FIREBASE_JSON }}
EOF

            # Run backend, mounting Firebase JSON and passing env-vars
            docker run -d \
              --name pulseiq_backend \
              --link postgres_db \
              -p 8085:8085 \
              -e SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
              -e SPRING_JPA_HIBERNATE_DDL_AUTO=update \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e APP_CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }} \
              -e GOOGLE_APPLICATION_CREDENTIALS=/app/firebase-service-account.json \
              -v ~/pulseiq_secrets/firebase.json:/app/firebase-service-account.json:ro \
              ${{ secrets.DOCKER_USERNAME }}/pulseiq-app:latest
